{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\moviesApp\\\\moviesApp\\\\movies\\\\src\\\\Table.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allMovies: [//     {\n        //         title: \"Terminator\",\n        //         genre: \"Action\",\n        //         stock: \"2\",\n        //         rate: \"2.5\",\n        //     },\n        //     {\n        //         title: \"Die Hard\",\n        //         genre: \"Action\",\n        //         stock: \"3\",\n        //         rate: \"2.5\",\n        //     },\n        //     {\n        //         title: \"Get Out\",\n        //         genre: \"Comedy\",\n        //         stock: \"5\",\n        //         rate: \"3\",\n        //     },\n        //     {\n        //         title: \"Trip to Italy\",\n        //         genre: \"Romance\",\n        //         stock: \"6\",\n        //         rate: \"3.5\",\n        //     },\n      ],\n      currPage: 1\n    };\n  }\n\n  //lifetime mai ek baar data fetch karna hai to isliye\n  // componentDidMount\n  componentDidMount() {\n    fetch(\"/movies\").then(function (res) {\n      return res.json();\n    }).then(json => {\n      this.setState({\n        allMovies: json\n      });\n      this.props.sendData(json.length);\n    });\n  }\n\n  render() {\n    let moviesToDisplay = [];\n\n    if (this.props.currGenre != \"All Genre\") {\n      moviesToDisplay = this.state.allMovies.filter(e => {\n        return e.genre.name == this.props.currGenre;\n      });\n    } else {\n      moviesToDisplay = this.state.allMovies;\n    } // console.log(moviesToDisplay);\n\n\n    if (this.props.searchString) {\n      let strToCompare = this.props.searchString.toLowerCase();\n      moviesToDisplay = moviesToDisplay.filter(el => {\n        return el.title.toLowerCase().includes(strToCompare);\n      });\n    }\n\n    let numberOfPages = Math.ceil(this.state.allMovies.length / 5);\n    let arr = [];\n\n    for (let i = 1; i <= numberOfPages; i++) {\n      arr.push(i);\n    }\n\n    let starting = (this.state.currPage - 1) * 5;\n    let ending = this.state.currPage * 5 - 1;\n    moviesToDisplay = moviesToDisplay.slice(starting, Math.min(ending, this.state.allMovies.length - 1) + 1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: moviesToDisplay.map(el => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.genre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.numberInStock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: el.dailyRentalRate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  // console.log(e.currentTarget.innerText);\n                  // e.currentTarget.innerText==\"Liked\"?e.currentTarget.innerText=\"Like\":e.currentTarget.innerText=\"Liked\";\n                  let allMovies = this.state.allMovies;\n                  let index = allMovies.findIndex(e => {\n                    return e._id == el._id;\n                  });\n                  allMovies[index].liked ? allMovies[index].liked = false : allMovies[index].liked = true;\n                  this.setState({\n                    allMovies: allMovies\n                  });\n                },\n                children: el.liked ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons\",\n                  children: \"favorite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons\",\n                  children: \"favorite_border\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: () => {\n                    let allMovies = this.state.allMovies;\n                    allMovies = allMovies.filter(e => {\n                      return e._id != el._id;\n                    });\n                    this.setState({\n                      allMovies: allMovies\n                    });\n                    this.props.sendData(allMovies.length);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this)]\n            }, el._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"Page navigation example\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item\",\n            onClick: () => {\n              let currPage = this.state.currPage;\n              currPage--;\n              if (currPage < 1) currPage = 1;\n              this.setState({\n                currPage: currPage\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              href: \"#\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), arr.map(ele => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              onClick: () => {\n                this.setState({\n                  currPage: ele\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: \"#\",\n                children: ele\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 41\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item\",\n            onClick: () => {\n              let currPage = this.state.currPage;\n              currPage++;\n              if (currPage > numberOfPages) currPage = numberOfPages;\n              this.setState({\n                currPage: currPage\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              href: \"#\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/moviesApp/moviesApp/movies/src/Table.jsx"],"names":["React","Table","Component","state","allMovies","currPage","componentDidMount","fetch","then","res","json","setState","props","sendData","length","render","moviesToDisplay","currGenre","filter","e","genre","name","searchString","strToCompare","toLowerCase","el","title","includes","numberOfPages","Math","ceil","arr","i","push","starting","ending","slice","min","map","numberInStock","dailyRentalRate","index","findIndex","_id","liked","ele"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nclass Table extends React.Component {\r\n    state = {\r\n        allMovies: [\r\n            //     {\r\n            //         title: \"Terminator\",\r\n            //         genre: \"Action\",\r\n            //         stock: \"2\",\r\n            //         rate: \"2.5\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Die Hard\",\r\n            //         genre: \"Action\",\r\n            //         stock: \"3\",\r\n            //         rate: \"2.5\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Get Out\",\r\n            //         genre: \"Comedy\",\r\n            //         stock: \"5\",\r\n            //         rate: \"3\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Trip to Italy\",\r\n            //         genre: \"Romance\",\r\n            //         stock: \"6\",\r\n            //         rate: \"3.5\",\r\n            //     },\r\n        ],\r\n        currPage: 1,\r\n    };\r\n    //lifetime mai ek baar data fetch karna hai to isliye\r\n    // componentDidMount\r\n    componentDidMount() {\r\n        fetch(\"/movies\").then(function (res) {\r\n            return res.json();\r\n        }).then((json) => {\r\n            this.setState({ allMovies: json });\r\n            this.props.sendData(json.length);\r\n        });\r\n    }\r\n    render() {\r\n        let moviesToDisplay = [];\r\n\r\n        if(this.props.currGenre != \"All Genre\")\r\n        {\r\n            moviesToDisplay = this.state.allMovies.filter((e)=>{\r\n                return e.genre.name == this.props.currGenre;\r\n            });\r\n        }\r\n        else\r\n        {\r\n            moviesToDisplay = this.state.allMovies;\r\n        }\r\n        // console.log(moviesToDisplay);\r\n        \r\n        if(this.props.searchString)\r\n        {\r\n            let strToCompare = this.props.searchString.toLowerCase();\r\n\r\n            moviesToDisplay = moviesToDisplay.filter((el)=>{\r\n                return el.title.toLowerCase().includes(strToCompare);\r\n            });\r\n        }\r\n\r\n\r\n        let numberOfPages = Math.ceil(this.state.allMovies.length / 5);\r\n        let arr = [];\r\n        for (let i = 1; i <= numberOfPages; i++) {\r\n            arr.push(i);\r\n        }\r\n        let starting = (this.state.currPage - 1) * 5;\r\n        let ending = this.state.currPage * 5 - 1;\r\n\r\n         moviesToDisplay = moviesToDisplay.slice(\r\n            starting, Math.min(ending,this.state.allMovies.length - 1) + 1\r\n            );\r\n\r\n        return (\r\n            <div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Genre</th>\r\n                            <th scope=\"col\">Stock</th>\r\n                            <th scope=\"col\">Rate</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {moviesToDisplay.map((el) => {\r\n                            return (\r\n                                <tr key={el._id}>\r\n                                    <td>{el.title}</td>\r\n                                    <td>{el.genre.name}</td>\r\n                                    <td>{el.numberInStock}</td>\r\n                                    <td>{el.dailyRentalRate}</td>\r\n                                    <td onClick={()=>{\r\n                                        // console.log(e.currentTarget.innerText);\r\n                                        // e.currentTarget.innerText==\"Liked\"?e.currentTarget.innerText=\"Like\":e.currentTarget.innerText=\"Liked\";\r\n                                        let allMovies = this.state.allMovies;\r\n\r\n                                        let index = allMovies.findIndex((e)=>{\r\n                                            return e._id == el._id;\r\n                                        });\r\n\r\n                                        allMovies[index].liked?allMovies[index].liked=false:allMovies[index].liked=true;\r\n\r\n                                        this.setState({allMovies:allMovies});\r\n\r\n                                    }}>{(el.liked)?\r\n                                    <span className=\"material-icons\">\r\n                                    favorite\r\n                                    </span>:\r\n                                    <span className=\"material-icons\">\r\n                                    favorite_border\r\n                                    </span>}</td>\r\n                                    <td>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" \r\n                                        onClick={()=>{\r\n                                            let allMovies = this.state.allMovies;\r\n                                            \r\n                                            allMovies = allMovies.filter((e)=>{\r\n                                                return e._id != el._id;\r\n                                            });\r\n\r\n                                            this.setState({allMovies:allMovies});\r\n                                            this.props.sendData(allMovies.length);\r\n                                        }}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\"\r\n                        onClick={()=>{\r\n                            let currPage = this.state.currPage;\r\n                            currPage--;\r\n                            if(currPage<1) currPage=1;\r\n                            this.setState({currPage:currPage});\r\n                        }}\r\n                        ><a className=\"page-link\" href=\"#\">Previous</a></li>\r\n                        {\r\n                            arr.map((ele)=>{\r\n                                return (<li \r\n                                className=\"page-item\"\r\n                                onClick={()=>{\r\n                                    this.setState({currPage:ele});\r\n                                }}>\r\n                                    <a className=\"page-link\" href=\"#\">{ele}</a>\r\n                                    </li>\r\n                            )\r\n                            })\r\n                        }\r\n                        <li className=\"page-item\"\r\n                        onClick={()=>{\r\n                            let currPage = this.state.currPage;\r\n                            currPage++;\r\n                            if(currPage>numberOfPages) currPage=numberOfPages;\r\n                            this.setState({currPage:currPage});\r\n                        }}\r\n                        ><a className=\"page-link\" href=\"#\">Next</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}