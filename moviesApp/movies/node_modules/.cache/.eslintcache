[{"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Customers.jsx":"3","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Navbar.jsx":"4","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Rentals.jsx":"5","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Login.jsx":"6","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Table.jsx":"7","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Search.jsx":"8","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Category.jsx":"9"},{"size":739,"mtime":1626637246000,"results":"10","hashOfConfig":"11"},{"size":1496,"mtime":1629661152000,"results":"12","hashOfConfig":"11"},{"size":82,"mtime":1626636236000,"results":"13","hashOfConfig":"11"},{"size":2478,"mtime":1626700096000,"results":"14","hashOfConfig":"11"},{"size":76,"mtime":1626637052000,"results":"15","hashOfConfig":"11"},{"size":70,"mtime":1626637038000,"results":"16","hashOfConfig":"11"},{"size":7224,"mtime":1626688356000,"results":"17","hashOfConfig":"11"},{"size":722,"mtime":1626687088000,"results":"18","hashOfConfig":"11"},{"size":1249,"mtime":1626684280000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qocm3q",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Customers.jsx",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Navbar.jsx",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Rentals.jsx",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Login.jsx",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Table.jsx",["39","40","41","42","43","44","45"],"import React from \"react\";\r\nclass Table extends React.Component {\r\n    state = {\r\n        allMovies: [\r\n            //     {\r\n            //         title: \"Terminator\",\r\n            //         genre: \"Action\",\r\n            //         stock: \"2\",\r\n            //         rate: \"2.5\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Die Hard\",\r\n            //         genre: \"Action\",\r\n            //         stock: \"3\",\r\n            //         rate: \"2.5\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Get Out\",\r\n            //         genre: \"Comedy\",\r\n            //         stock: \"5\",\r\n            //         rate: \"3\",\r\n            //     },\r\n            //     {\r\n            //         title: \"Trip to Italy\",\r\n            //         genre: \"Romance\",\r\n            //         stock: \"6\",\r\n            //         rate: \"3.5\",\r\n            //     },\r\n        ],\r\n        currPage: 1,\r\n    };\r\n    //lifetime mai ek baar data fetch karna hai to isliye\r\n    // componentDidMount\r\n    componentDidMount() {\r\n        fetch(\"/movies\").then(function (res) {\r\n            return res.json();\r\n        }).then((json) => {\r\n            this.setState({ allMovies: json });\r\n            this.props.sendData(json.length);\r\n        });\r\n    }\r\n    render() {\r\n        let moviesToDisplay = [];\r\n\r\n        if(this.props.currGenre != \"All Genre\")\r\n        {\r\n            moviesToDisplay = this.state.allMovies.filter((e)=>{\r\n                return e.genre.name == this.props.currGenre;\r\n            });\r\n        }\r\n        else\r\n        {\r\n            moviesToDisplay = this.state.allMovies;\r\n        }\r\n        // console.log(moviesToDisplay);\r\n        \r\n        if(this.props.searchString)\r\n        {\r\n            let strToCompare = this.props.searchString.toLowerCase();\r\n\r\n            moviesToDisplay = moviesToDisplay.filter((el)=>{\r\n                return el.title.toLowerCase().includes(strToCompare);\r\n            });\r\n        }\r\n\r\n\r\n        let numberOfPages = Math.ceil(this.state.allMovies.length / 5);\r\n        let arr = [];\r\n        for (let i = 1; i <= numberOfPages; i++) {\r\n            arr.push(i);\r\n        }\r\n        let starting = (this.state.currPage - 1) * 5;\r\n        let ending = this.state.currPage * 5 - 1;\r\n\r\n         moviesToDisplay = moviesToDisplay.slice(\r\n            starting, Math.min(ending,this.state.allMovies.length - 1) + 1\r\n            );\r\n\r\n        return (\r\n            <div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Genre</th>\r\n                            <th scope=\"col\">Stock</th>\r\n                            <th scope=\"col\">Rate</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {moviesToDisplay.map((el) => {\r\n                            return (\r\n                                <tr key={el._id}>\r\n                                    <td>{el.title}</td>\r\n                                    <td>{el.genre.name}</td>\r\n                                    <td>{el.numberInStock}</td>\r\n                                    <td>{el.dailyRentalRate}</td>\r\n                                    <td onClick={()=>{\r\n                                        // console.log(e.currentTarget.innerText);\r\n                                        // e.currentTarget.innerText==\"Liked\"?e.currentTarget.innerText=\"Like\":e.currentTarget.innerText=\"Liked\";\r\n                                        let allMovies = this.state.allMovies;\r\n\r\n                                        let index = allMovies.findIndex((e)=>{\r\n                                            return e._id == el._id;\r\n                                        });\r\n\r\n                                        allMovies[index].liked?allMovies[index].liked=false:allMovies[index].liked=true;\r\n\r\n                                        this.setState({allMovies:allMovies});\r\n\r\n                                    }}>{(el.liked)?\r\n                                    <span className=\"material-icons\">\r\n                                    favorite\r\n                                    </span>:\r\n                                    <span className=\"material-icons\">\r\n                                    favorite_border\r\n                                    </span>}</td>\r\n                                    <td>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" \r\n                                        onClick={()=>{\r\n                                            let allMovies = this.state.allMovies;\r\n                                            \r\n                                            allMovies = allMovies.filter((e)=>{\r\n                                                return e._id != el._id;\r\n                                            });\r\n\r\n                                            this.setState({allMovies:allMovies});\r\n                                            this.props.sendData(allMovies.length);\r\n                                        }}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\"\r\n                        onClick={()=>{\r\n                            let currPage = this.state.currPage;\r\n                            currPage--;\r\n                            if(currPage<1) currPage=1;\r\n                            this.setState({currPage:currPage});\r\n                        }}\r\n                        ><a className=\"page-link\" href=\"#\">Previous</a></li>\r\n                        {\r\n                            arr.map((ele)=>{\r\n                                return (<li \r\n                                className=\"page-item\"\r\n                                onClick={()=>{\r\n                                    this.setState({currPage:ele});\r\n                                }}>\r\n                                    <a className=\"page-link\" href=\"#\">{ele}</a>\r\n                                    </li>\r\n                            )\r\n                            })\r\n                        }\r\n                        <li className=\"page-item\"\r\n                        onClick={()=>{\r\n                            let currPage = this.state.currPage;\r\n                            currPage++;\r\n                            if(currPage>numberOfPages) currPage=numberOfPages;\r\n                            this.setState({currPage:currPage});\r\n                        }}\r\n                        ><a className=\"page-link\" href=\"#\">Next</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Table;","C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Search.jsx",[],"C:\\Users\\DELL\\Desktop\\moviesApp\\moviesApp\\movies\\src\\Category.jsx",[],{"ruleId":"46","severity":1,"message":"47","line":45,"column":33,"nodeType":"48","messageId":"49","endLine":45,"endColumn":35},{"ruleId":"46","severity":1,"message":"50","line":48,"column":37,"nodeType":"48","messageId":"49","endLine":48,"endColumn":39},{"ruleId":"46","severity":1,"message":"50","line":106,"column":58,"nodeType":"48","messageId":"49","endLine":106,"endColumn":60},{"ruleId":"46","severity":1,"message":"47","line":126,"column":62,"nodeType":"48","messageId":"49","endLine":126,"endColumn":64},{"ruleId":"51","severity":1,"message":"52","line":149,"column":26,"nodeType":"53","endLine":149,"endColumn":60},{"ruleId":"51","severity":1,"message":"52","line":157,"column":37,"nodeType":"53","endLine":157,"endColumn":71},{"ruleId":"51","severity":1,"message":"52","line":169,"column":26,"nodeType":"53","endLine":169,"endColumn":60},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]